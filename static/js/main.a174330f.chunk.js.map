{"version":3,"sources":["functions/seeds.ts","hooks/useLife.ts","functions/life.ts","components/rule.tsx","components/head.tsx","components/cell.tsx","components/grid.tsx","components/control.tsx","Game.tsx","serviceWorker.ts","index.tsx"],"names":["seed","height","width","dna","stream","Array","y","x","random","Math","round","useLife","speed","React","useState","cicle","setCicle","running","setRunning","setStream","overpopulation","loneliness","reproduction","constitution","setConstitution","step","useCallback","e","last","map","row","col","state","neighbors","count","i","j","alive","neighborwood","Life","useEffect","timer","setTimeout","clearTimeout","toggle","legislate","newRules","setAlive","next","Rule","children","onClick","active","HeadStyled","styled","div","Head","href","target","CellStyle","props","isAlive","Cell","GridStyled","Grid","className","key","item","ControlStyled","Control","clean","Game","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a174330f.chunk.js","sourcesContent":["export const seed = (\n\theight: number,\n\twidth: number,\n\tdna: (y: number, x: number) => boolean\n): boolean[][] => {\n\tlet stream: boolean[][] = new Array(height);\n\tfor (var y = 0; y < height; y++) {\n\t\tstream[y] = new Array(width);\n\t\tfor (var x = 0; x < width; x++) {\n\t\t\tstream[y][x] = dna(y, x);\n\t\t}\n\t}\n\treturn stream;\n};\n\nexport const random = (height: number, width: number) =>\n\tseed(height, width, () => Math.round(Math.random()) === 1);\n\nexport const clean = (height: number, width: number) =>\n\tseed(height, width, () => false);\n\nexport const full = (height: number, width: number) =>\n\tseed(height, width, () => true);\n","import React from \"react\";\nimport { random } from \"../functions/seeds\";\nimport * as Life from \"../functions/life\";\nimport { TStream, IRules } from \"../interfaces\";\n\nconst useLife = (height: number, width: number, speed: number) => {\n\tconst [cicle, setCicle] = React.useState<number>(0);\n\tconst [running, setRunning] = React.useState<boolean>(true);\n\tconst [stream, setStream] = React.useState<TStream>(random(height, width));\n\tconst [constitution, setConstitution] = React.useState<IRules>({\n\t\toverpopulation: true,\n\t\tloneliness: true,\n\t\treproduction: true,\n\t});\n\n\tconst step = React.useCallback(() => {\n\t\tsetCicle((e) => (e += 1));\n\t\tsetStream(Life.cicle(stream, height, width, constitution));\n\t}, [stream, height, width, constitution]);\n\n\tReact.useEffect(() => {\n\t\tlet timer = setTimeout(() => {\n\t\t\tif (running) step();\n\t\t}, speed);\n\t\treturn () => {\n\t\t\tclearTimeout(timer);\n\t\t};\n\t}, [running, step, speed]);\n\n\tconst setAlive = (y: number, x: number) => {\n\t\tconst next = stream;\n\t\tnext[y][x] = !next[y][x];\n\t\tsetStream([...next]);\n\t};\n\n\tconst toggle = () => {\n\t\tsetRunning((e) => !e);\n\t};\n\n\tconst legislate = (newRules: IRules) => {\n\t\tsetConstitution((e) => ({ ...e, ...newRules }));\n\t};\n\n\tconst seed = (stream?: TStream) => {\n\t\tsetStream(stream || random(height, width));\n\t};\n\n\treturn {\n\t\tcicle,\n\t\tstream,\n\t\trunning,\n\t\tconstitution,\n\t\ttoggle,\n\t\tstep,\n\t\tseed,\n\t\tlegislate,\n\t\tsetAlive,\n\t};\n};\n\nexport default useLife;\n","import { INeighborwood, TStream, IRules } from \"../interfaces\";\n\nexport const neighborwood = (\n\tstream: boolean[][],\n\ty: number,\n\tx: number,\n\theight: number,\n\twidth: number\n): INeighborwood => {\n\tlet count = 0;\n\n\tfor (let i = -1; i < 2; i++) {\n\t\tfor (let j = -1; j < 2; j++) {\n\t\t\tconst row = (y + i + height) % height;\n\t\t\tconst col = (x + j + width) % width;\n\t\t\tif (stream[row][col]) count += 1;\n\t\t}\n\t}\n\n\tif (stream[y][x]) count -= 1;\n\treturn {\n\t\talive: count,\n\t};\n};\n\nexport const cicle = (\n\tlast: TStream,\n\theight: number,\n\twidth: number,\n\tconstitution: IRules\n): TStream => {\n\treturn last.map((row, y) => {\n\t\treturn row.map((col, x) => {\n\t\t\tconst state = last[y][x];\n\t\t\tconst neighbors = neighborwood(last, y, x, height, width).alive;\n\t\t\tif (!state && neighbors === 3 && constitution.reproduction) {\n\t\t\t\treturn true;\n\t\t\t} else if (state && neighbors < 2 && constitution.loneliness) {\n\t\t\t\treturn false;\n\t\t\t} else if (state && neighbors > 3 && constitution.overpopulation) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t});\n\t});\n};\n","import React from \"react\";\n\nconst Rule: React.FunctionComponent<{\n\tonClick: () => void;\n\tactive?: boolean;\n}> = ({ children, onClick, active }) => {\n\treturn <li onClick={onClick}> {active ? children : <s>{children}</s>}</li>;\n};\n\nexport default Rule;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Rule from \"./rule\";\nimport { IRules } from \"../interfaces\";\n\nexport interface ICell {\n\tisAlive: boolean;\n}\n\nconst HeadStyled = styled.div`\n\ta,\n\th3,\n\tp,\n\tli {\n\t\tcolor: rgb(3, 244, 244);\n\t}\n\n\ta:hover,\n\tli:hover {\n\t\tcolor: rgb(244, 3, 244);\n\t}\n\n\th3 {\n\t\tfont-weight: 600;\n\t\ttext-align: center;\n\t\tpadding: 0px;\n\t\tmargin: 16px;\n\t}\n\tp,\n\tli {\n\t\tfont-weight: 200;\n\t\tfont-size: 12px;\n\t\tmargin: 0px 8px;\n\t\tpadding: 8px 0px;\n\t}\n\n\tp {\n\t\ttext-align: center;\n\t}\n\n\tli {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst Head: React.FunctionComponent<{\n\tconstitution: IRules;\n\tlegislate: (newRules: IRules) => void;\n}> = ({ constitution, legislate }) => {\n\treturn (\n\t\t<HeadStyled>\n\t\t\t<h3>{\"</>\"}</h3>\n\t\t\t<h3>Game of Life</h3>\n\t\t\t<p>\n\t\t\t\t{\" This is my implementation of \"}\n\n\t\t\t\t<a\n\t\t\t\t\thref='https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjn9NS4keTpAhW5IrkGHfjiC_MQFjAAegQIAhAB&url=https%3A%2F%2Fpt.wikipedia.org%2Fwiki%2FJohn_Conway&usg=AOvVaw2oQn32WW7cX9qMrdlHXIm_'\n\t\t\t\t\t// eslint-disable-next-line react/jsx-no-target-blank\n\t\t\t\t\ttarget='_blank'>\n\t\t\t\t\tJohn Conway's\n\t\t\t\t</a>\n\t\t\t\t{\" game of life.\"}\n\t\t\t</p>\n\t\t\t<p>Each step runs a set of 3 simple rules: </p>\n\n\t\t\t<ul>\n\t\t\t\t<Rule\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlegislate({ loneliness: !constitution.loneliness });\n\t\t\t\t\t}}\n\t\t\t\t\tactive={constitution.loneliness}>\n\t\t\t\t\tAny live cell with fewer than two live neighbours dies, as if by\n\t\t\t\t\tunderpopulation.\n\t\t\t\t</Rule>\n\t\t\t\t<Rule\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlegislate({ overpopulation: !constitution.overpopulation });\n\t\t\t\t\t}}\n\t\t\t\t\tactive={constitution.overpopulation}>\n\t\t\t\t\tAny live cell with more than three live neighbours dies, as if by\n\t\t\t\t\toverpopulation.\n\t\t\t\t</Rule>\n\t\t\t\t<Rule\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tlegislate({ reproduction: !constitution.reproduction });\n\t\t\t\t\t}}\n\t\t\t\t\tactive={constitution.reproduction}>\n\t\t\t\t\tAny dead cell with exactly three live neighbours becomes a live cell,\n\t\t\t\t\tas if by reproduction.\n\t\t\t\t</Rule>\n\t\t\t</ul>\n\t\t</HeadStyled>\n\t);\n};\n\nexport default Head;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface ICell {\n\tisAlive: boolean;\n}\n\nconst CellStyle = styled.div`\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 8px;\n\tborder: 2px solid #333;\n\tfont-size: 8px;\n\tbackground-color: ${(props: ICell) =>\n\t\tprops.isAlive ? \"rgb(3,244,244)\" : \"#333\"};\n\n\t&:hover {\n\t\tbackground-color: rgb(244, 3, 244);\n\t}\n`;\n\nconst Cell: React.FunctionComponent<{\n\tisAlive: boolean;\n\ty: number;\n\tx: number;\n\tonClick: (y: number, x: number) => void;\n}> = ({ isAlive, x, y, onClick }) => {\n\treturn (\n\t\t<CellStyle\n\t\t\tisAlive={isAlive}\n\t\t\tonClick={() => {\n\t\t\t\tonClick(y, x);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default Cell;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Cell from \"./cell\";\nimport { TStream } from \"../interfaces\";\n\nconst GridStyled = styled.div`\n\t.row {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n`;\n\nconst Grid: React.FunctionComponent<{\n\tstream: TStream;\n\theight: number;\n\twidth: number;\n\tsetAlive: (y: number, x: number) => void;\n}> = ({ stream, setAlive, height, width }) => {\n\treturn (\n\t\t<GridStyled>\n\t\t\t{[...new Array(height)].map((row, y) => (\n\t\t\t\t<div className='row' key={y}>\n\t\t\t\t\t{[...new Array(width)].map((item, x) => (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tkey={x}\n\t\t\t\t\t\t\tx={x}\n\t\t\t\t\t\t\ty={y}\n\t\t\t\t\t\t\tonClick={setAlive}\n\t\t\t\t\t\t\tisAlive={stream[y][x]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</GridStyled>\n\t);\n};\n\nexport default Grid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { clean } from \"../functions/seeds\";\nimport { TStream } from \"../interfaces\";\n\nexport interface ICell {\n\tisAlive: boolean;\n}\n\nconst ControlStyled = styled.div`\n\tp {\n\t\tfont-weight: 200;\n\t\tfont-size: 12px;\n\t\tmargin: 0px 8px;\n\t\tpadding: 8px 0px;\n\t\tcolor: rgb(3, 244, 244);\n\t\ttext-align: center;\n\t}\n\n\t.actions {\n\t\tdisplay: flex;\n\t\talign-content: center;\n\t\tjustify-content: center;\n\t\tpadding: 8px 0px;\n\t\tbutton {\n\t\t\tcolor: rgb(3, 244, 244);\n\t\t\tfont-family: \"Fira Code\", monospace;\n\t\t\tfont-variant-ligatures: common-ligatures;\n\t\t\tbackground-color: transparent;\n\t\t\tborder: none;\n\t\t\tcursor: pointer;\n\t\t\t&:hover {\n\t\t\t\tcolor: rgb(244, 3, 244);\n\t\t\t}\n\t\t\t&:active {\n\t\t\t\toutline: none;\n\t\t\t\tborder: none;\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\toutline: 0;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Control: React.FunctionComponent<{\n\tcicle: number;\n\theight: number;\n\twidth: number;\n\trunning: boolean;\n\ttoggle: () => void;\n\tstep: () => void;\n\tseed: (stream?: TStream | undefined) => void;\n}> = ({ cicle, running, toggle, step, seed, height, width }) => {\n\treturn (\n\t\t<ControlStyled>\n\t\t\t<p>the simulation already runned {cicle} steps.</p>\n\t\t\t<div className='actions'>\n\t\t\t\t<button onClick={toggle}>{running ? \"||>\" : \"|>\"}</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tstep();\n\t\t\t\t\t}}>\n\t\t\t\t\t{\"-->\"}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tseed();\n\t\t\t\t\t}}>\n\t\t\t\t\t{\"<~>\"}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tseed(clean(height, width));\n\t\t\t\t\t}}>\n\t\t\t\t\t{\"< >\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ControlStyled>\n\t);\n};\n\nexport default Control;\n","import React from \"react\";\nimport useLife from \"./hooks/useLife\";\nimport Head from \"./components/head\";\nimport Grid from \"./components/grid\";\nimport Control from \"./components/control\";\n\nconst Game: React.FunctionComponent = () => {\n\tconst height = 32;\n\tconst width = 32;\n\n\tconst {\n\t\tstream,\n\t\tcicle,\n\t\trunning,\n\t\tconstitution,\n\t\tsetAlive,\n\t\ttoggle,\n\t\tseed,\n\t\tstep,\n\t\tlegislate,\n\t} = useLife(height, width, 100);\n\n\treturn (\n\t\t<div className='plane'>\n\t\t\t<Head legislate={legislate} constitution={constitution} />\n\n\t\t\t<Control\n\t\t\t\theight={height}\n\t\t\t\twidth={width}\n\t\t\t\tcicle={cicle}\n\t\t\t\ttoggle={toggle}\n\t\t\t\tseed={seed}\n\t\t\t\tstep={step}\n\t\t\t\trunning={running}\n\t\t\t/>\n\n\t\t\t<Grid\n\t\t\t\theight={height}\n\t\t\t\twidth={width}\n\t\t\t\tsetAlive={setAlive}\n\t\t\t\tstream={stream}></Grid>\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}